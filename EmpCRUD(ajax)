//index.html

<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>Insert title here</title>
</head>
<body>
	<center>
		<label>Name :<input type="text" id="name"></label><br>
		<br> <label>enum :<input type="text" id="enum"></label><br>
		<br> <label>sal :<input type="text" id="sal"></label><br>
		<br> <label>job :<input type="text" id="job"></label><br>
		<br> <label>dept :<input type="text" id="dept"></label><br>
		<br>

		<button id="first" onclick="First()">First</button>
		<button id="last" onclick="Last()">Last</button>
		<button id="next" onclick="Next()">Next</button>
		<button id="Prev" onclick="Prev()">Previous</button>
		<button id="Add" onclick="Add()">Add</button>
		<button id="Del" onclick="Del()">Delete</button>
	</center>
	<script>
	 var pos=0;
	 function Next(){
		 	pos+=1;
			var x=new XMLHttpRequest();
			x.open('GET','Servlet?button=Next&pos='+pos,'true');
			x.onreadystatechange=function(){
				if(x.readyState===4){
					var data=JSON.parse(x.responseText);
					document.getElementById("name").value=data.name;
					document.getElementById("enum").value=data.eno;
					document.getElementById("sal").value=data.sal;
					document.getElementById("job").value=data.job;
					document.getElementById("dept").value=data.dept;
				}
			}
			x.send();
		}
	 function Prev(){
		 	pos-=1;
			var x=new XMLHttpRequest();
			x.open('GET','Servlet?button=Prev&pos='+pos,'true');
			x.onreadystatechange=function(){
				if(x.readyState===4){
					var data=JSON.parse(x.responseText);
					document.getElementById("name").value=data.name;
					document.getElementById("enum").value=data.eno;
					document.getElementById("sal").value=data.sal;
					document.getElementById("job").value=data.job;
					document.getElementById("dept").value=data.dept;
				}
			}
			x.send();
		}
		function First(){
			var x=new XMLHttpRequest();
			x.open('GET','Servlet?button=First','true');
			x.onreadystatechange=function(){
				if(x.readyState===4){
					var data=JSON.parse(x.responseText);
					document.getElementById("name").value=data.name;
					document.getElementById("enum").value=data.eno;
					document.getElementById("sal").value=data.sal;
					document.getElementById("job").value=data.job;
					document.getElementById("dept").value=data.dept;
				}
			}
			x.send();
			pos=0;
		}
		function Last(){
			var x=new XMLHttpRequest();
			x.open('GET','Servlet?button=Last','true');
			x.onreadystatechange=function(){
				if(x.readyState===4){
					var data=JSON.parse(x.responseText);
					document.getElementById("name").value=data.name;
					document.getElementById("enum").value=data.eno;
					document.getElementById("sal").value=data.sal;
					document.getElementById("job").value=data.job;
					document.getElementById("dept").value=data.dept;
				}
			}
			x.send();
		}
		function Add(){
			var x=new XMLHttpRequest();
			var name=document.getElementById("name").value;
			var eno=document.getElementById("enum").value;
			var sal=document.getElementById("sal").value;
			var job=document.getElementById("job").value;
			var dept=document.getElementById("dept").value;
			x.open('GET','Servlet?button=Add&name='+name+'&eno='+eno+'&sal='+sal+'&job='+job+'&dept='+dept,'true');
			x.onreadystatechange=function(){
				if(x.readyState===4){
					var data=JSON.parse(x.responseText);
				}
			}
			x.send();
		}
		function Del(){
			var x=new XMLHttpRequest();
			var eno=document.getElementById("enum").value;
			x.open('GET','Servlet?button=Del&eno='+eno+'&pos='+pos,'true');
			x.onreadystatechange=function(){
				if(x.readyState===4){
					var data=JSON.parse(x.responseText);
				}
			}
			x.send();
		}
	
	</script>
</body>
</html>

//Servlet

package Crud;

import java.io.IOException;
import java.util.ArrayList;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.json.JSONObject;

@WebServlet("/Servlet")
public class Servlet extends HttpServlet {
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		JDBC j = new JDBC();
		ArrayList<Employee> res = j.getAllEmployees();
		String u = request.getParameter("button");
		if (u.equals("First")) {
			Employee e = res.get(0);
			JSONObject jo = new JSONObject();
			jo.put("name", e.getName());
			jo.put("eno", e.getEno());
			jo.put("sal", e.getSal());
			jo.put("job", e.getJob());
			jo.put("dept", e.getDept());
			response.getWriter().write(jo.toString());
		} else if (u.equals("Last")) {
			Employee e = res.get(res.size() - 1);
			JSONObject jo = new JSONObject();
			jo.put("name", e.getName());
			jo.put("eno", e.getEno());
			jo.put("sal", e.getSal());
			jo.put("job", e.getJob());
			jo.put("dept", e.getDept());
			response.getWriter().write(jo.toString());
		} else if (u.equals("Next")) {
			int s = Integer.parseInt(request.getParameter("pos"));
			Employee e = res.get(s);
			JSONObject jo = new JSONObject();
			jo.put("name", e.getName());
			jo.put("eno", e.getEno());
			jo.put("sal", e.getSal());
			jo.put("job", e.getJob());
			jo.put("dept", e.getDept());
			response.getWriter().write(jo.toString());
		} else if (u.equals("Prev")) {
			int s = Integer.parseInt(request.getParameter("pos"));
			Employee e = res.get(s);
			JSONObject jo = new JSONObject();
			jo.put("name", e.getName());
			jo.put("eno", e.getEno());
			jo.put("sal", e.getSal());
			jo.put("job", e.getJob());
			jo.put("dept", e.getDept());
			response.getWriter().write(jo.toString());
		} else if (u.equals("Add")) {
			String s1, s2, s3, s4, s5;
			s1 = request.getParameter("name");
			s2 = request.getParameter("eno");
			s3 = request.getParameter("sal");
			s4 = request.getParameter("job");
			s5 = request.getParameter("dept");
			j.Add(s1, s2, s3, s4, s5);
			res = j.getAllEmployees();
		} else if (u.equals("Del")) {
			String s = (request.getParameter("eno"));
			int g = 0;
			for (int i = 0; i < res.size(); i++) {
				if (res.get(i).getEno().equals(s)) {
					g = i;
				}
			}
			res.remove(g);
			j.Del(s);
		}
	}

}


//jdbc

package Crud;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;

public class JDBC {
	public ArrayList<Employee> getAllEmployees() {
		ArrayList<Employee> res = null;
		Connection c = null;
		Statement s = null;
		ResultSet rs = null;
		try {
			Class.forName("org.postgresql.Driver");
			c = DriverManager.getConnection(
					"jdbc:postgresql://192.168.110.48:5432/plf_training?user=plf_training_admin&password=pff123");
			s = c.createStatement();
			rs = s.executeQuery("select * from ServEmp");
			res = new ArrayList<>();
			while (rs.next()) {
				res.add(new Employee(rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4),
						rs.getString(5)));
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

		return res;
	}

	public void Add(String s1, String s2, String s3, String s4, String s5) {
		Connection c = null;
		PreparedStatement s = null;
		try {
			Class.forName("org.postgresql.Driver");
			c = DriverManager.getConnection(
					"jdbc:postgresql://192.168.110.48:5432/plf_training?user=plf_training_admin&password=pff123");
			s = c.prepareStatement("insert into ServEmp values(?,?,?,?,?)");
			s.setString(1, s1);
			s.setString(2, s2);
			s.setString(3, s3);
			s.setString(4, s4);
			s.setString(5, s5);
			s.execute();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public void Del(String s1) {
		Connection c = null;
		PreparedStatement s = null;
		try {
			Class.forName("org.postgresql.Driver");
			c = DriverManager.getConnection(
					"jdbc:postgresql://192.168.110.48:5432/plf_training?user=plf_training_admin&password=pff123");
			s = c.prepareStatement("delete from ServEmp where eno=?");
			s.setString(1, s1);
			s.execute();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

}



//Employee

package Crud;

public class Employee {
	String name, eno, sal, job, dept;

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getEno() {
		return eno;
	}

	public void setEno(String eno) {
		this.eno = eno;
	}

	public String getSal() {
		return sal;
	}

	public void setSal(String sal) {
		this.sal = sal;
	}

	public String getJob() {
		return job;
	}

	public void setJob(String job) {
		this.job = job;
	}

	public String getDept() {
		return dept;
	}

	public void setDept(String dept) {
		this.dept = dept;
	}

	public Employee(String name, String eno, String sal, String job, String dept) {
		super();
		this.name = name;
		this.eno = eno;
		this.sal = sal;
		this.job = job;
		this.dept = dept;
	}

}


//table

select * from ServEmp

delete from ServEmp where eno='E101';
INSERT INTO ServEmp (name, eno, sal, job, dept)
VALUES ('John Doe', 'E101', '50000', 'Manager', 'Sales');

INSERT INTO ServEmp (name, eno, sal, job, dept)
VALUES ('Jane Smith', 'E102', '45000', 'Developer', 'IT');

INSERT INTO ServEmp (name, eno, sal, job, dept)
VALUES ('Michael Johnson', 'E103', '60000', 'Analyst', 'Finance');
